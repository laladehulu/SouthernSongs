/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/mustache/mustache.js":
/*!*******************************************!*\
  !*** ./node_modules/mustache/mustache.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// This file has been generated from mustache.mjs\n(function (global, factory) {\n   true ? module.exports = factory() :\n  undefined;\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue, tags);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.0.1',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/mustache/mustache.js?");

/***/ }),

/***/ "./node_modules/os-browserify/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/os-browserify/browser.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n\n\n//# sourceURL=webpack:///./node_modules/os-browserify/browser.js?");

/***/ }),

/***/ "./src/SongPage.js":
/*!*************************!*\
  !*** ./src/SongPage.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SongPage; });\n/* harmony import */ var _templates_songPage_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./templates/songPage.html */ \"./src/templates/songPage.html\");\n/* harmony import */ var _templates_songPage_html__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_templates_songPage_html__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mustache__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\nclass SongPage extends HTMLElement{\r\n    constructor() {\r\n        super();\r\n        var shadow = this.attachShadow({mode: 'open'});\r\n\r\n        this._songInfo={};\r\n    \r\n    }\r\n    connectedCallback(){\r\n\r\n    }\r\n    set songInfo(data){\r\n      this._songInfo = data;\r\n      console.log(data);\r\n      this.shadowRoot.innerHTML= mustache__WEBPACK_IMPORTED_MODULE_1___default.a.render(_templates_songPage_html__WEBPACK_IMPORTED_MODULE_0___default.a,this._songInfo);\r\n\r\n    }\r\n    get songInfo(){\r\n      return this._songInfo;\r\n    }\r\n\r\n}\r\nwindow.customElements.define(\"song-page\",SongPage);\n\n//# sourceURL=webpack:///./src/SongPage.js?");

/***/ }),

/***/ "./src/SouthernPage.js":
/*!*****************************!*\
  !*** ./src/SouthernPage.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SouthernPage; });\n/* harmony import */ var _templates_southernPage_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./templates/southernPage.html */ \"./src/templates/southernPage.html\");\n/* harmony import */ var _templates_southernPage_html__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_templates_southernPage_html__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/data.js\");\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./card */ \"./src/card.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! os */ \"./node_modules/os-browserify/browser.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_3__);\n\r\n\r\n\r\n\r\nconst SongDataArray = Object.values(_data__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\nclass SouthernPage extends HTMLElement{\r\n    constructor() {\r\n        super();\r\n        var shadow = this.attachShadow({mode: 'open'});\r\n        shadow.innerHTML = _templates_southernPage_html__WEBPACK_IMPORTED_MODULE_0___default.a;\r\n        var containerDiv = this.shadowRoot.querySelector(\".gallery-songs\");\r\n        for(let i = 0;i<SongDataArray.length;i++){\r\n            let songCard = document.createElement(\"song-card\");\r\n            console.log(typeof songCard);\r\n            songCard.songInfo = SongDataArray[i];\r\n            containerDiv.appendChild(songCard);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nwindow.customElements.define(\"southern-page\",SouthernPage);\n\n//# sourceURL=webpack:///./src/SouthernPage.js?");

/***/ }),

/***/ "./src/card.js":
/*!*********************!*\
  !*** ./src/card.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return card; });\n/* harmony import */ var _templates_musicCard_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./templates/musicCard.html */ \"./src/templates/musicCard.html\");\n/* harmony import */ var _templates_musicCard_html__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_templates_musicCard_html__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\");\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mustache__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\nclass card extends HTMLElement{\r\n    constructor() {\r\n        super();\r\n        var shadow = this.attachShadow({mode: 'open'});\r\n\r\n        this.addEventListener(\"click\",function(){\r\n            console.log(\"event dispacthed\");\r\n            document.dispatchEvent(new CustomEvent(\"clickcard\", {\r\n                detail: this._songInfo,\r\n                bubbles: true\r\n          \r\n  \r\n              }));\r\n        });\r\n        var atts = this.attributes;\r\n        this._songInfo={};\r\n    \r\n    }\r\n    set songInfo(data){\r\n      this._songInfo = data;\r\n\r\n      this.shadowRoot.innerHTML= mustache__WEBPACK_IMPORTED_MODULE_1___default.a.render(_templates_musicCard_html__WEBPACK_IMPORTED_MODULE_0___default.a,this._songInfo);\r\n    }\r\n    get songInfo(){\r\n      console.log(\"getter\");\r\n      return this._songInfo;\r\n    }\r\n\r\n}\r\nwindow.customElements.define(\"song-card\",card);\n\n//# sourceURL=webpack:///./src/card.js?");

/***/ }),

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    Bonnie_Blue_Flag:{\r\n        src:\"image/bonnieflag.jpg\",\r\n        title:\"Bonnie Blue Flag\",\r\n        author:\"Harry McCarthy\",\r\n        mainmusicsrc:\"music/bonnieblueflag.mp3\",\r\n        \r\n        performers:\"2nd South Carolina String Band\",\r\n     \r\n        description:  `Although some claim that Macarthy was more interested in attracting audiences and making money than he was in supporting the Southern cause, his song was nevertheless an instant hit with Confederate soldiers and civilians alike. He premiered it during a concert in Jackson, Mississippi, in the spring of 1861 and performed it again in September of that same year at the New Orleans Academy of Music in front of an audience of soldiers headed for the Virginia front. The response was enthusiastic, and Macarthy was suddenly in demand as he had never been before. He traveled throughout the South during the war years, performing to packed houses of appreciative listeners, and although he continued to compose patriotic songs (among them \"Missouri and The Volunteer\" or \"It Is My Country's Call.\" \"The Bonnie Blue Flag\" was his greatest success.`,\r\n        lyric: `1.\r\n        We are a band of brothers and native to the soil\r\n        Fighting for our liberty with treasure, blood, and toil\r\n        And when our rights were threatened, the cry rose near and far\r\n        Hurrah for the Bonnie Blue Flag that bears a single star!\r\n        \r\n        Chorus:\r\n        Hurrah! Hurrah!\r\n        For Southern rights, hurrah!\r\n        Hurrah for the Bonnie Blue Flag that bears a single star.\r\n        \r\n        2.\r\n        As long as the Union was faithful to her trust\r\n        Like friends and like brethren, kind were we, and just\r\n        But now, when Northern treachery attempts our rights to mar\r\n        We hoist on high the Bonnie Blue Flag that bears a single star.\r\n        \r\n        Chorus\r\n        \r\n        3.\r\n        First gallant South Carolina nobly made the stand\r\n        Then came Alabama and took her by the hand\r\n        Next, quickly Mississippi, Georgia, and Florida\r\n        All raised on high the Bonnie Blue Flag that bears a single star.\r\n        \r\n        Chorus\r\n        \r\n        4.\r\n        Ye men of valor gather round the banner of the right\r\n        Texas and fair Louisiana join us in the fight\r\n        Davis, our loved President, and Stephens statesmen rare\r\n        Now rally round the Bonnie Blue Flag that bears a single star.\r\n        \r\n        Chorus\r\n        \r\n        5.\r\n        Now here's to brave Virginia, the Old Dominion State,\r\n        With the young Confederacy at last has sealed her fate,\r\n        And spurred by her example, now other states prepare\r\n        To hoist high the Bonnie Blue Flag that bears a single star.\r\n        \r\n        (Alternately:\r\n        Now here's to brave Virginia, the Old Dominion State,\r\n        Who with the young Confederacy at length has linked her fate.\r\n        Impelled by her example, let other states prepare\r\n        To hoist high the Bonnie Blue Flag that bears a single star.)\r\n        \r\n        Chorus[7]\r\n        \r\n        6.\r\n        Then cheer, boys, cheer, raise a joyous shout\r\n        For Arkansas and North Carolina now have both gone out,\r\n        And let another rousing cheer for Tennessee be given,\r\n        The single star of the Bonnie Blue Flag has grown to be eleven.\r\n        \r\n        Chorus\r\n        \r\n        7.\r\n        Then here's to our Confederacy, strong we are and brave,\r\n        Like patriots of old we'll fight, our heritage to save;\r\n        And rather than submit to shame, to die we would prefer,\r\n        So cheer for the Bonnie Blue Flag that bears a single star.\r\n        \r\n        Chorus[8][dead link]`\r\n    },\r\n    Goober_Peas:{\r\n        src:\"image/gooberpeas.jpg\",\r\n        title:\"Goober Peas\",\r\n        performers:\"Bobby Horton\",\r\n        author:\"A. Pindar and P. Nutt \",\r\n        mainmusicsrc:\"music/gooberpeas.mp3\",\r\n        description:`The lyrics of \"Goober Peas\" are a description of daily life during the last few years of the Civil War for Southerners. After being cut off from the rail lines and their farm land, they had little to eat aside from boiled peanuts (or \"goober peas\") which often served as an emergency ration. Peanuts were also known as pindars and goobers. `,\r\n        lyric:`Sittin' by the roadside on a summer's day\r\n        Talkin' with my comrades to pass the time away\r\n        Lying in the shade underneath the trees\r\n        Goodness how delicious, eating goober peas\r\n        Peas, peas, peas, peas, eating goober peas\r\n        Goodness how delicious, eating goober peas\r\n        Peas, peas, peas, peas, eating goober peas\r\n        Goodness how delicious, eating goober peas\r\n        Just before the battle, the General heard a row\r\n        He said, \"The Yanks are coming, I hear their rifles now\"\r\n        He turned around in wonder and what do you think he sees?\r\n        The Georgia militia eating goober peas\r\n        Peas, peas, peas, peas, eating goober peas\r\n        Goodness how delicious, eating goober peas\r\n        Peas, peas, peas, peas, eating goober peas\r\n        Goodness how delicious, eating goober peas\r\n        Think my song has lasted almost long enough\r\n        The subject is most interesting but rhymes are mighty rough\r\n        I wish this war was over, when free from rags and fleas\r\n        We'd kiss our wives and sweethearts and then we'd gobble goober peas`\r\n    },\r\n    Southern_Soldier:{\r\n        src:\"image/southernsoldier.jpg\",\r\n        title:\"Southern Soldier\",\r\n        performers:\"2nd South Carolina String Band\",\r\n        author:\"\",\r\n        mainmusicsrc:\"music/southernsoldier.mp3\",\r\n        description:\"“Southern Soldier” is one such song that was popular among Confederate soldiers. It expresses their point of view and determination to fight and die for their cause.\",\r\n        lyric:`I'll place my knapsack on my back\r\n        My rifle on my shoulder\r\n        I'll march away to the firing line\r\n        And kill that Yankee soldier\r\n        And kill that Yankee soldier\r\n        I'll march away to the firing line\r\n        And kill that Yankee soldier\r\n        I'll bid farewell to my wife and child\r\n        Farewell to my aged mother\r\n        And go and join in the bloody strife\r\n        Till this cruel war is over\r\n        Till this cruel war is over\r\n        I'll go and join in the bloody strife\r\n        Till this cruel war is over\r\n        If I am shot on the battlefield\r\n        And I should not recover\r\n        Oh, who will protect my wife and child\r\n        And care for my aged mother\r\n        And care for my aged mother\r\n        Oh, who will protect my wife and child\r\n        And care for my aged mother\r\n        And if our Southern cause is lost\r\n        And Southern rights denied us\r\n        We'll be ground beneath the tyrant's heel\r\n        For our demands of justice\r\n        For our demands of justice\r\n        We'll be ground beneath the tyrant's heel\r\n        For our demands of justice\r\n        Before the South shall bow her head\r\n        Before the tyrants harm us\r\n        I'll give my all to the Southern cause\r\n        And die in the Southern army\r\n        And die in the Southern army\r\n        I'll give my all to the Southern cause\r\n        And die in the Southern army\r\n        If I must die for my home and land\r\n        My spirit will not falter\r\n        Oh, here's my heart and here's my hand\r\n        Upon my country's altar\r\n        Upon my country's altar\r\n        Oh, here's my heart and here's my hand\r\n        Upon my country's altar\r\n        Then Heaven be with us in the strife\r\n        Be with the Southern soldier\r\n        We'll drive the mercenary horde\r\n        Beyond our Southern border\r\n        Beyond our Southern border\r\n        We'll drive the mercenary horde\r\n        Beyond our Southern border\r\n        So, I'll place my knapsack on my back\r\n        My rifle on my shoulder\r\n        I'll march away to the firing line\r\n        And kill that Yankee soldier\r\n        And kill that Yankee soldier\r\n        I'll march away to the firing line\r\n        And kill that Yankee soldier`\r\n    },\r\n    Stonewall_Jackson_Way:{\r\n        src:\"image/stonewalljackson.jpg\",\r\n        title:\"Stonewall Jackson's Way\",\r\n\r\n        author:\"Anonymous\",\r\n        mainmusicsrc:\"music/stonewalljackson.mp3\",\r\n        performers:\"Bobby Horton\",\r\n        description:\"Upon observing Jackson's bravery during the First Mannasas(battle of bull run), one of his fellow generals reportedly said, “Look, men, there is Jackson standing like a stone wall!”–a comment that spawned Jackson’s nickname. \"\r\n    },\r\n    Stonewall_Jackson:{\r\n        src:\"image/stonewalljackson.jpg\",\r\n        title:\"Jackson in the Valley\",\r\n        performers:\"Bobby Horton\",\r\n        author:\"Anonymous\",\r\n        mainmusicsrc:\"music/jacksoninthevalley.mp3\",\r\n        description:\"Upon observing Jackson's bravery during the First Mannasas(battle of bull run), one of his fellow generals reportedly said, “Look, men, there is Jackson standing like a stone wall!”–a comment that spawned Jackson’s nickname. \",\r\n        lyric:`Come, stack arms, men! Pile on the rails,\r\n        Stir up the camp-fire bright;\r\n        No matter if the canteen fails,\r\n        We'll make a rousing night!\r\n        Here Shenandoah brawls along,\r\n        And burly Blue-Ridge echoes strong,\r\n        To swell our brigade's rousing song\r\n        Of \"Stonewall Jackson's way.\"\r\n        \r\n        We see him now, - the old slouched hat,\r\n        Cocked o'er his eye askew;\r\n        The shrewd, dry smile, - the speech so pat,\r\n        So calm, so blunt, so true.\r\n        The \"Blue-Light Elder,\" his foe knows well.\r\n        Says he, \"that's Banks, - he don't like shell;\r\n        Lord save his soul! we'll give him hell!\"\r\n        In Stonewall Jackson's way.\r\n        \r\n        Silence! ground arms! kneel all! caps off!\r\n        Old \"Blue Lights\" going to pray.\r\n        Strangle the fool that dares to scoff!\r\n        Attention! it's his way.\r\n        Appealing from his native sod,\r\n        In forma pauperis to God,\r\n        Say \"tare Thine arm; stretch forth thy rod,\r\n        Amen!\" \"That's Stonewall Jackson's way.\"\r\n        \r\n        He's in the saddle now, Fall in!\r\n        Steady the whole brigade;\r\n        Hill's at the ford, cut off, we'll win\r\n        His way out, ball and blade!\r\n        What matter if our shoes are worn?\r\n        What matter if our feet are torn?\r\n        Quick-step! we're with him before morn!\r\n        That's \"Stonewall Jackson's way.\"\r\n        \r\n        The sun's bright lances, rout the mists,\r\n        Of morning, and by George!\r\n        Here's Longstreet, struggling in the lists,\r\n        Hemmed in an ugly gorge.\r\n        Pope and his Yankees, fierce before,\r\n        \"Bay'nets and grape!\" hear Stonewall roar;\r\n        \"Charge, Stuart! Pay off Ashby's score!\"\r\n        In \"Stonewall Jackson's way.\"\r\n        \r\n        Ah! Maiden, wait and watch and yearn\r\n        For news of Jackson's band!\r\n        Ah! Widow, read, with eyes that burn,\r\n        That ring upon thy hand;\r\n        Ah! Wife, sew on, pray on, hope on;\r\n        Thy life shall not be all forlorn\r\n        The foe had better ne'er been born\r\n        That gets in \"Stonewall's way.\"[4]`\r\n    },\r\n    \r\n    Wearing_Of_The_Grey:{\r\n        src:\"image/wearingofthegrey.JPG\",\r\n        title:\"Wearing of the Grey\",\r\n        performers:\"Bobby Horton\",\r\n        author:\"Anonymous\",\r\n        mainmusicsrc:\"music/wearingofthegrey.mp3\",\r\n        description:\"A song by veteran, for veteran. It was a song about how the confederate soldiers gathered together, and talked about their old day of struggle and marching.\",\r\n        lyric:`The fearful struggle's ended now and peace smiles on\r\n        Our land,\r\n        And though we've yielded we have proved ourselves a\r\n        Faithful band.\r\n        We fought them long, we fought them well, we fought\r\n        Them night and day,\r\n        And bravely struggled for our rights while wearing of\r\n        The gray.\r\n        And now that we have ceased to fight and pledged our\r\n        Sacred word,\r\n        That we against the Union's might no more will draw the\r\n        Sword,\r\n        We feel despite the sneers of those who never smelt the\r\n        Fray,\r\n        That we've a manly, honest right to wearing of the\r\n        Gray.\r\n        Our cause is lost the more we fight 'gainst\r\n        O'erwhelming power,\r\n        All wearied are our limbs and drenched with many a\r\n        Battle shower.\r\n        We feign we rest for want of strength in yielding up\r\n        The day,\r\n        And lower the flag so proudly born while wearing of the\r\n        Gray.\r\n        Defeat is not dishonor, our honor not bereft,\r\n        We thank God that in our hearts this priceless boon was\r\n        Left.\r\n        And though we weep just for those braves who stood in\r\n        Proud array,\r\n        Beneath our flag and nobly died while wearing of the\r\n        Gray.\r\n        When in the ranks of war we stood and faced the deadly\r\n        Hail,\r\n        Our simple suits of gray composed our only coats of\r\n        Mail.\r\n        And on the awful hours that marked the bloody battle\r\n        Day,\r\n        In memories we'll still be seen wearing of the gray.\r\n        Oh! should we reach that glorious place where waits a\r\n        Sparklin' crown,\r\n        For everyone who for the right his soldier life lay\r\n        Down.\r\n        God grant to us the privilege upon that happy day,\r\n        Of claspin' hands with those who fell while wearing of\r\n        The gray.`\r\n    },\r\n    Dixie:{\r\n        src:\"image/dixie.JPG\",\r\n        title:\"Dixie\",\r\n        performers:\"Me\",\r\n        author:\"Dan Emmett\",\r\n        mainmusicsrc:\"music/dixie.mp3\",\r\n        lyric: `\r\n        This is the lyrics of To Arm in Dixie:\r\n\r\n        Fear no danger! Shun no labor!\r\n        Lift up rifle, pike, and saber!\r\n        To arms! To arms! To arms, in Dixie!\r\n        Shoulder pressing close to shoulder,\r\n        Let the odds make each heart bolder!\r\n        To arms! To arms! To arms, in Dixie!\r\n        Advance the flag of Dixie! Hurrah! Hurrah!\r\n        In Dixie's land we take our stand, and live or die for Dixie!\r\n        To arms! To arms! And conquer peace for Dixie!\r\n        To arms! To arms! And conquer peace for Dixie!\r\n        Swear upon your country's altar\r\n        Never to submit or falter--\r\n        To arms! To arms! To arms, in Dixie!\r\n        Till the spoilers are defeated,\r\n        Till the Lord's work is completed!\r\n        To arms! To arms! To arms, in Dixie!`,\r\n        description:`Dixie was written by Dan Emmet as a walkaround for his minstrel show. His boss told him that if he doesn't cheer up the audiences tomorrow, he might lose his job. As he pondered what to sing, he heard a person say \"Its so cold here, I wish I was in dixie's land\"(since they live in the north). And building upon that line, the lyrics for the song Dixie was born. Its lyrics tell the story of a freed black slave longing for the plantation of his birth.\r\n        During the American Civil War, Dixie was adopted as the unofficial anthem of the\r\n        Confederacy. New versions appeared during wartime that more explicitly tied the\r\n        song to the events of the Civil War. The song presented the point of view,\r\n        common to minstrelsy at the time, that slavery was overall a positive institution. `\r\n    },\r\n    Riding_A_Raid:{\r\n        src:\"image/ridingaraid.jpg\",\r\n        title:\"Riding a Raid\",\r\n        performers:\"2nd South Carolina String Band\",\r\n        author:\"Unknown\",\r\n        mainmusicsrc:\"music/ridingaraid.mp3\",\r\n        lyric:`'Tis old Stonewall the Rebel that leans on his sword,\r\n        And while we are mounting prays low to the Lord:\r\n        \"Now each cavalier that loves honor and right,\r\n        Let him follow the feather of Stuart tonight.\"\r\n        Come tighten your girth and slacken your rein;\r\n        Come buckle your blanket and holster again;\r\n        Try the click of your trigger and balance your blade,\r\n        For he must ride sure that goes riding a raid.\r\n        Now gallop, now gallop to swim or to ford!\r\n        Old Stonewall, still watching, prays low to the Lord:\r\n        \"Goodbye, dear old Rebel! The river's not wide,\r\n        And Maryland's lights in her window to guide.\"\r\n        There's a man in the White House with blood on his mouth!\r\n        If there's knaves in the North, there are braves in the South.\r\n        We are three thousand horses, and not one afraid;\r\n        We are three thousand sabres and not a dull blade.\r\n        Then gallop, then gallop by ravines and rocks!\r\n        Who would bar us the way take his toll in hard knocks;\r\n        For with these points of steel, on the line of the Penn\r\n        We have made some fine strokes and we'll make 'em again.`,\r\n        description:`The song, in the tune of the old Irish folk song Bonnie Dundee, was about the confederate cavalry general James Ewell Brown \"Jeb\" Stuart and his cavalry soldiers. Jeb Stuart was famous for his daring raid behind enemy lines. One time, he even wrote a letter to Abraham lincoln, complaining about the poor quality of the donkeys after capturing them from the hand of the Union Army.\r\n        He was also famous for his love for music, and had his own band.\r\n         `\r\n    },\r\n    Yellow_Rose_Of_The_Texas:{\r\n        src:\"image/yellowroseoftexas.jpg\",\r\n        title:\"Yellow Rose of the Texas\",\r\n        performers:\"Bobby Horton\",\r\n        author:\"Unknown\",\r\n        mainmusicsrc:\"music/yellowroseoftexas.mp3\",\r\n        lyric:`There's a yellow rose of Texas\r\n        That I am going to see\r\n        No other fellow knows her\r\n        No other, only me\r\n        She cried so when I left her\r\n        It like to broke my heart\r\n        And if I ever find her\r\n        We never more will part\r\n        She's the sweetest rose of color\r\n        This soldier ever knew\r\n        Her eyes are bright as diamonds\r\n        They sparkle like the dew\r\n        You may talk about your dearest May\r\n        And sing of Rosa Lee\r\n        But the Yellow Rose of Texas\r\n        Is the only girl for me\r\n        Where the Rio Grande is flowing\r\n        And the starry skies are bright\r\n        She walks along the river\r\n        In the quiet summer night\r\n        She thinks if I remember\r\n        When we parted long ago\r\n        I promised to come back again\r\n        And never leave her so\r\n        Oh now I'm going to find her\r\n        For my heart is full of woe\r\n        And we'll sing the song together\r\n        That we sang so long ago\r\n        We'll play the banjo gaily\r\n        And we'll sing the song of yore\r\n        And the Yellow Rose of Texas\r\n        Shall be mine for ever more\r\n        She's the sweetest rose of color\r\n        This soldier ever knew\r\n        Her eyes are bright as diamonds\r\n        They sparkle like the dew\r\n        You may talk about your dearest May\r\n        And sing of Rosa Lee\r\n        But the Yellow Rose of Texas\r\n        Is the only girl for me\r\n        *Some versions have these 2 lines as\r\n        The last lines of chorus*\r\n        But the Yellow Rose of Texas\r\n        Beats the girls of Tennessee`,\r\n        description:`The Yellow Rose of Texas was a real person. She was known as Emily Morgan. Emily Morgan was a mixed blood girl during the Texan Independence War. The song was popularized during the civil war as a march of the confederacy Texas Volunteers. In 1960s, it became popular again. `\r\n    },\r\n    Waiting_For_The_Wargon:{\r\n        src:\"image/waitforthewagon.jpg\",\r\n        title:\"Wait For The Wagon\",\r\n        performers:\"Tennessee Ernie Ford\",\r\n        author:\"Unknown\",\r\n        mainmusicsrc:\"music/waitforthewagon.mp3\",\r\n        description:`Wait for the Wagon is also known as southern wagon and the Dissolution Wagon. I could not find much information about this song. But it was first published in 1851. When South Carolina seceded, the lyric was changed to fit the current situation of secession. In its lyrics, it described the south as the  wagon, carolina as the driver. It described the wagon as a \"dissolution wagon\", which apparently is referring to the secession from the Union.`\r\n    },\r\n    Land_Of_King_Cotton:{\r\n        src:\"image/landofkingcotton.jpg\",\r\n        title:\"Dixie, The Land of King Cotton\",\r\n        performers:\"Bobby Horton\",\r\n        author:\"Word by Captain Hughes, Music by John Hill Hewitt\",\r\n        mainmusicsrc:\"music/dixielandofkingcotton.mp3\",\r\n        description:`Words by Captain Hughes\r\n        Music by John Hill Hewitt.\r\n        I could not find any other information about this piece on the internet. It wasn't on my Civil War Song book either. I might check for libraries and hopefully find more new info.\r\n        `,\r\n        lyric:`\r\n        Oh, Dixie, the land of King Cotton,\r\n        The home of the brave and the free;\r\n        A nation by freedom begotten,\r\n        The terror of despots to be.\r\n        Wherever thy banner is streaming,\r\n        Base tyranny quails at thy feet;\r\n        And liberty's sunlight is beaming\r\n        In splendor of majesty sweet.\r\n\r\n\r\n        CHORUS: Then three cheers for our Army so true,\r\n        Three cheers for our President too;\r\n        May our banner triumphantly wave\r\n        Over Dixie, the land of the brave!\r\n\r\n        When Liberty sounds her war rattle,\r\n        Demanding her right and her due,\r\n        The first land to rally to battle\r\n        Is Dixie, the home of the true.\r\n        Thick as leaves of the forest in summer,\r\n        Her brave sons will rise on each plain\r\n        And then strike till each vandal comer\r\n        Lies dead on the soil he would stain.\r\n\r\n        CHORUS\r\n\r\n        May the names of the dead that we cherish\r\n        Fill memory's cup to the brim;\r\n        May the laurels we've won never perish,\r\n        Nor our stars of their glory grow dim.\r\n        May our states of the South never sever\r\n        But companions of freedom e'er be;\r\n        May they flourish Confed'rate forever,\r\n        The boast of the brave and the free.\r\n\r\n        CHORUS\r\n        `\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack:///./src/data.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _SouthernPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SouthernPage */ \"./src/SouthernPage.js\");\n/* harmony import */ var _SongPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SongPage */ \"./src/SongPage.js\");\n\r\n\r\nconst Main = document.querySelector(\".main\");\r\nconst Tabs = (function (){\r\n    function InitSouthernPage(){\r\n        Main.innerHTML=\"\";\r\n        var southernTab = document.createElement('southern-page');\r\n        \r\n        Main.appendChild(southernTab);\r\n    }\r\n    function UpdateToCardPage(data){\r\n        \r\n        var southernTab = document.createElement('song-page');\r\n        console.log(data);\r\n        southernTab.songInfo = data;\r\n        Main.innerHTML=\"\";\r\n        \r\n        Main.appendChild(southernTab);\r\n        window.scrollTo(0, 0);\r\n    }\r\n    InitSouthernPage();\r\n    return {\r\n        InitSouthernPage:InitSouthernPage,\r\n        UpdateToCardPage:UpdateToCardPage\r\n\r\n    }\r\n})();\r\ndocument.addEventListener(\"clickcard\", event => {\r\n   \r\n       console.log(event.detail);\r\n       Tabs.UpdateToCardPage(event.detail);//Update the page to the SongPage\r\n       //Use the songInfo data from the card which is clicked on\r\n   \r\n  });\r\ndocument.querySelector(\"#link-display\").addEventListener(\"click\",\r\n    Tabs.InitSouthernPage\r\n)\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/templates/musicCard.html":
/*!**************************************!*\
  !*** ./src/templates/musicCard.html ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Module\nvar code = \"<style>\\r\\n    .gallery-songs{\\r\\n      display: grid;\\r\\n      column-gap: 5%;\\r\\n      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\\r\\n      grid-template-rows: repeat(5,200px);\\r\\n      \\r\\n    }\\r\\n    .card-music{\\r\\n      border-radius: 3px;\\r\\n      overflow: hidden;\\r\\n      width: 200px;\\r\\n      \\r\\n      text-align: center;\\r\\n      border-radius: 20px;\\r\\n      color: white;\\r\\n      position: relative;\\r\\n      font-size: 0.8rem;\\r\\n      height:100%;\\r\\n      cursor: pointer;\\r\\n    \\r\\n    }\\r\\n    .card-music-title{\\r\\n      position: absolute;\\r\\n      \\r\\n      height: 20%;\\r\\n      width: 100%;\\r\\n      top: 80%;\\r\\n      font-size: 1rem;\\r\\n      box-shadow: inset 0 -20px 20px rgba(0,0,0,0.6);\\r\\n    }\\r\\n    .card-music img{\\r\\n      \\r\\n      position: absolute;\\r\\n      top: 0;\\r\\n      left: 0;\\r\\n      font-size: 0.8rem;\\r\\n      width: 100%;\\r\\n      height:100%;\\r\\n    }\\r\\n    </style>\\r\\n    <div class=\\\"card-music\\\">\\r\\n      <img src=\\\"{{src}}\\\">\\r\\n      <h3 class=\\\"card-music-title\\\">{{title}}</h3>\\r\\n    </div>\\r\\n    \";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack:///./src/templates/musicCard.html?");

/***/ }),

/***/ "./src/templates/songPage.html":
/*!*************************************!*\
  !*** ./src/templates/songPage.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Module\nvar code = \"<style>\\r\\n.jubotron{\\r\\n   margin: 20px;\\r\\n   padding: 30px 20px 20px 0;\\r\\n    position: relative;\\r\\n    text-align: left;\\r\\n    display: grid;\\r\\n    grid-template-columns: 5fr 8fr;\\r\\n    grid-template-areas: \\\"img a\\\"\\r\\n    \\\"img p\\\"\\r\\n    \\\"img audio\\\";\\r\\n    grid-template-rows: 50px 155px 50px\\r\\n}\\r\\n.main{\\r\\n    border-radius: 10px;\\r\\n    background-color: rgb(236, 230, 221);\\r\\n}\\r\\nimg{\\r\\n    border-radius: 15px;\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    max-width: 100%;\\r\\n \\r\\n    grid-area: img;\\r\\n}\\r\\n.title{\\r\\n    grid-area: a;\\r\\n    font-size: 1.5rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.paragraph{\\r\\n    grid-area: p;\\r\\n  \\r\\n    overflow: scroll;\\r\\n    max-width: 100%;\\r\\n    overflow-x: hidden;\\r\\n}\\r\\naudio{\\r\\n    display: inline;\\r\\n\\r\\n}\\r\\nspan{\\r\\n   font-style: italic;\\r\\n}\\r\\n.main-music{\\r\\n    grid-area: audio;\\r\\n    display: grid;\\r\\n    grid-template-columns: 5fr 3fr;\\r\\n}\\r\\n.lyric{\\r\\n    margin-top: 100px;\\r\\n    background-color: rgb(236, 230, 221);\\r\\n    text-align: center;\\r\\n}\\r\\n</style>\\r\\n<div class=\\\"main\\\">\\r\\n<div class=\\\"jubotron\\\">\\r\\n    <img src=\\\"{{src}}\\\">\\r\\n    <p class=\\\"title\\\">{{title}}</p>\\r\\n    <p class=\\\"paragraph\\\">{{description}}</p>\\r\\n    <div class=\\\"main-music\\\">\\r\\n    <audio controls>\\r\\n        <source src=\\\"{{mainmusicsrc}}\\\" type=\\\"audio/mpeg\\\">\\r\\n\\r\\n      Your browser does not support the audio element.\\r\\n      </audio><span>Performed By:{{performers}}</span>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"lyric\\\">\\r\\n<pre>{{lyric}}</pre>\\r\\n</div>\\r\\n</div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack:///./src/templates/songPage.html?");

/***/ }),

/***/ "./src/templates/southernPage.html":
/*!*****************************************!*\
  !*** ./src/templates/southernPage.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Module\nvar code = \"<style>\\r\\n    .gallery-songs{\\r\\n      padding-top: 50px;\\r\\n      display: grid;\\r\\n      column-gap: 3%;\\r\\n      gap: 60px;\\r\\n\\r\\n      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\\r\\n      grid-template-rows: repeat(5,230px);\\r\\n      \\r\\n    }\\r\\n</style>\\r\\n<div class=\\\"gallery-songs\\\">\\r\\n    \\r\\n</div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack:///./src/templates/southernPage.html?");

/***/ })

/******/ });